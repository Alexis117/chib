{"version":3,"sources":["../src/index.js"],"names":["express","sequelize","models","app","use","json","get","req","res","users","User","findAll","attributes","exclude","send","user","findByPk","params","user_id","include","status","error","messsage","card","Card","findOne","where","userId","id","userType","beneficiaries","map","beneficiary","name","beneficiariesIds","lastName","phoneNumber","cardNumber","expDate","benefactors","benefactor","benefactorsIds","delete","destroy","message","post","body","create","err","errors","type","undefined","console","log","beneficiaryPhoneNumber","length","addBeneficiaries","addBenefactors","benefiaryId","benefactorId","benefactorPhoneNumber","sync","then","listen","port","catch"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express';\nimport { sequelize, models } from './models/index.js';\n\nconst app = express()\napp.use(express.json());\n\n//Get User Edpoint\napp.get('/user', async function(req, res){\n    const users = await models.User.findAll({attributes: {\n        exclude: ['createdAt', 'updatedAt', 'userId', 'beneficiaryId', 'benefactorsId'],\n    }})\n    return res.send(users)\n});\n\n//GET User by ID \napp.get('/user/:user_id', async function(req, res){\n    const user = await models.User.findByPk(req.params.user_id, {\n        include:['beneficiaries', 'benefactors'],\n    })\n    if (user === null)\n        return res.status(400).send({error:\"User Error\", messsage:'User does not exist'})\n    const card = await models.Card.findOne({where:{userId:user.id}})\n    if (user.userType == '1') {\n        const beneficiaries = user.beneficiaries.map(beneficiary => beneficiary.name)\n        const beneficiariesIds = user.beneficiaries.map(beneficiary => beneficiary.id)\n        return res.send({\n            userId: user.id,\n            name: user.name,\n            lastName: user.lastName,\n            phoneNumber: user.phoneNumber,\n            userType: user.userType,\n            cardNumber: card.cardNumber,\n            expDate: card.expDate,\n            beneficiaries: beneficiaries,\n            beneficiariesIds: beneficiariesIds\n        })\n    }\n    else if (user.userType == '2'){\n        const benefactors = user.benefactors.map(benefactor => benefactor.name)\n        const benefactorsIds = user.benefactors.map(benefactor => benefactor.id)\n        return res.send({\n            userId: user.id,\n            name: user.name,\n            lastName: user.lastName,\n            phoneNumber: user.phoneNumber,\n            userType: user.userType,\n            cardNumber: card.cardNumber,\n            expDate: card.expDate,\n            benefactors: benefactors,\n            benefactorsIds: benefactorsIds\n\n        })\n    }\n})\n\n//Delete user\napp.delete('/user/:user_id', async function(req, res){\n    const user = await models.User.findByPk(req.params.user_id)\n    if (user === null)\n        return res.status(400).send({error:\"User Error\", messsage:'User does not exist'})\n    await models.User.destroy({where:{id:user.id}})\n    return res.send({message:'Successfully deleted user'})\n})\n\n//Create User Endpoint\napp.post('/user', async function(req, res){\n\n    const name = req.body['name']\n    const lastName = req.body['lastName']\n    const phoneNumber = req.body['phoneNumber']\n    const userType = req.body['userType']\n\n    try{\n        const user = await models.User.create({\n            name: name,\n            lastName: lastName,\n            phoneNumber: phoneNumber,\n            userType: userType\n        })\n        return res.send({user:user})\n    } catch(err){\n        //Cayching errors from model validation\n        if (err.errors[0].type == 'unique violation')\n            return res.status(400).send({error:\"Unique Error\", message:'Phone number already used'})\n        else if (err.errors[0].type == 'notNull Violation')\n            return res.status(400).send({error:\"Incomplete Request\", message:err.errors[0].message})\n        else\n            return res.status(400).send({error:\"Validation Error\", message:err.errors[0].message})\n    }\n});\n\n//Create card related to user\napp.post('/cards', async function(req, res){\n    const userId = req.body['userId']\n    const cardNumber = req.body['cardNumber']\n    const expDate = req.body ['expDate']\n\n    //Validate if user exists\n    if (userId === undefined)\n        return res.status(400).send({error:\"Incomplete Request\", messsage:'Missing arg userId'})\n    else if (await models.User.findByPk(userId) === null)\n        return res.status(400).send({error:\"User Error\", message:'User does not exist'})\n    else {\n        try{\n            const card = await models.Card.create({\n                userId: userId,\n                cardNumber: cardNumber,\n                expDate: expDate\n            })\n            return res.send({card:card})\n        } catch(err){\n            console.log(err)\n            return res.status(400).send({error:\"Validation Error\", message:err.errors[0].message})\n        }\n    }\n\n});\n\n//Add beneficiary to benefactor\napp.post('/beneficiaries', async function(req, res){\n    const userId = req.body['userId']\n    const beneficiaryPhoneNumber = req.body['beneficiaryPhoneNumber']\n\n    if (userId === undefined)\n        return res.status(400).send({error:\"Incomplete Request\", messsage:'Missing arg userId'})\n    if (beneficiaryPhoneNumber === undefined)\n        return res.status(400).send({error:\"Incomplete Request\", messsage:'Missing arg beneficiaryPhoneNumber'})\n\n    //Validate if both exists\n    const benefactor =  await models.User.findByPk(userId, {include: ['beneficiaries']})\n    const beneficiary =  await models.User.findOne({where:{phoneNumber:beneficiaryPhoneNumber}, include:['benefactors']})\n\n    if (benefactor === null)\n        return res.status(400).send({error:\"User Error\", message:'User does not exist'})\n    else if (benefactor.userType == '2')\n        return res.status(400).send({error:\"User Error\", message:'This user is registered as beneficiary'})\n\n    if (beneficiary === null)\n        return res.status(400).send({error:\"User Error\", message:'User with this number does not exist'})\n    else if (beneficiary.userType == '1')\n        return res.status(400).send({error:\"User Error\", message:'This number is linked to a benefactor'})\n\n    //Checamos si aún es posible agregar beneficiarios o benefacotres respectivamente\n    if (benefactor.beneficiaries.length >= 2)\n        return res.send({error:\"Limit Number Error\", message:\"Is not possible to add a new beneficiary to this benefactor\"})\n    else if (beneficiary.benefactors.length >= 2)\n        return res.send({error:\"Limit Number Error\", message:\"Is not possible to add a new benefactor to this beneficiary\"})\n\n    benefactor.addBeneficiaries(beneficiary)\n    beneficiary.addBenefactors(benefactor)\n    console.log(await models.User.findByPk(userId, {include: ['beneficiaries']}))\n    return res.send({message:'Successfully add beneficiary', benefiaryId:beneficiary.id, benefactorId:benefactor.id})\n});\n\n//Add benefactor to beneficiary\napp.post('/benefactors', async function(req, res){\n    const userId = req.body['userId']\n    const benefactorPhoneNumber = req.body['benefactorPhoneNumber']\n\n    if (userId === undefined)\n        return res.status(400).send({error:\"Incomplete Request\", messsage:'Missing arg userId'})\n    if (benefactorPhoneNumber === undefined)\n        return res.status(400).send({error:\"Incomplete Request\", messsage:'Missing arg benefactorPhoneNumber'})\n        \n    //Validate if both exists\n    const beneficiary =  await models.User.findByPk(userId, {include: ['benefactors']})\n    const benefactor =  await models.User.findOne({where:{phoneNumber:benefactorPhoneNumber}, include:['beneficiaries']})\n\n    if (beneficiary === null)\n        return res.status(400).send({error:\"User Error\", message:'User does not exist'})\n    else if (beneficiary.userType == '1')\n        return res.status(400).send({error:\"User Error\", message:'This user is registered as benefactor'})\n\n    if (benefactor === null)\n        return res.status(400).send({error:\"User Error\", message:'User with this number does not exist'})\n    else if (benefactor.userType == '2')\n        return res.status(400).send({error:\"User Error\", message:'This number is linked to a beneficiary'})\n\n    //Checamos si aún es posible agregar beneficiarios o benefacotres respectivamente\n    if (benefactor.beneficiaries.length >= 2)\n        return res.send({error:\"Limit Number Error\", message:\"Is not possible to add a new beneficiary to this benefactor\"})\n    else if (beneficiary.benefactors.length >= 2)\n        return res.send({error:\"Limit Number Error\", message:\"Is not possible to add a new benefactor to this beneficiary\"})\n\n    benefactor.addBeneficiaries(beneficiary)\n    beneficiary.addBenefactors(benefactor)\n    return res.send({message:'Successfully add benefactor', benefiaryId:beneficiary.id, benefactorId:benefactor.id})\n});\n\nsequelize.sync({/*alter:true, force:true*/}).then(async () => {\n\n    app.listen({ port: 8000 }, () => {\n      console.log('Server listening on http://localhost:8000');\n    });\n}).catch(err => console.log(err));"]}